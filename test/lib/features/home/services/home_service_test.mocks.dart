// Mocks generated by Mockito 5.4.4 from annotations
// in app_salud/test/lib/features/home/services/home_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:app_salud/api/request_handler.dart' as _i4;
import 'package:app_salud/core/db/database_helper.dart' as _i6;
import 'package:app_salud/features/home/models/user_health.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserHealth_1 extends _i1.SmartFake implements _i3.UserHealth {
  _FakeUserHealth_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RequestHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestHandler extends _i1.Mock implements _i4.RequestHandler {
  MockRequestHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Response> performGet(String? path) => (super.noSuchMethod(
        Invocation.method(
          #performGet,
          [path],
        ),
        returnValue: _i5.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #performGet,
            [path],
          ),
        )),
      ) as _i5.Future<_i2.Response>);
}

/// A class which mocks [DataBaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataBaseHelper extends _i1.Mock implements _i6.DataBaseHelper {
  MockDataBaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.UserHealth> getData({
    required String? key,
    required String? boxName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
          {
            #key: key,
            #boxName: boxName,
          },
        ),
        returnValue: _i5.Future<_i3.UserHealth>.value(_FakeUserHealth_1(
          this,
          Invocation.method(
            #getData,
            [],
            {
              #key: key,
              #boxName: boxName,
            },
          ),
        )),
      ) as _i5.Future<_i3.UserHealth>);

  @override
  _i5.Future<String?> put({
    required String? key,
    required dynamic data,
    required String? boxName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #key: key,
            #data: data,
            #boxName: boxName,
          },
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
}
